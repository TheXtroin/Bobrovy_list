import telebot
from telebot import types
import time

bot = telebot.TeleBot('7201185153:AAGOdyaalEfSgUyKyuIT2evYzTA2YIbgpRk')

shopping_list = []

print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')


@bot.message_handler(commands=['start'])
def start(message):
    print('–ë–æ—Ç –≤ –¥–µ–π—Å—Ç–≤–∏–∏')
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
    btn2 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id,
                     '–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —É—Å–ª—É–≥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –ø–æ–¥ —Ç–≤–æ–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)', reply_markup=markup)


@bot.message_handler(content_types=["text"])
def look_and_edit(message):
    if message.text == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫':
        list_per = ''
        for i in range(len(shopping_list)):
            list_per = list_per + '\n' + str(i + 1) + '.' + ' ' + shopping_list[i]
        if list_per != '':
            bot.send_message(message.chat.id, list_per)
        elif list_per == '':
            bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø—É—Å—Ç!')

    elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫':
        markup_edit = types.ReplyKeyboardMarkup()
        btn_create = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å')
        btn_delete = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å')
        btn_esc = types.KeyboardButton('–ù–∞–∑–∞–¥')
        markup_edit.add(btn_create, btn_delete, btn_esc)
        bot.send_message(message.chat.id, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–∫–µ –ø–æ–∫—É–ø–æ–∫?', reply_markup=markup_edit)

    elif message.text == '–ü–æ–ø–æ–ª–Ω–∏—Ç—å':
        markup_create = types.ReplyKeyboardMarkup()
        btn_finish = '–ì–æ—Ç–æ–≤–æ'
        markup_create.add(btn_finish)
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø–æ–∫—É–ø–∫–∏. –ö–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ì–æ—Ç–æ–≤–æ"',
                               reply_markup=markup_create)
        bot.register_next_step_handler(msg, create_list)

    elif message.text == '–£–¥–∞–ª–∏—Ç—å':
        markup_delete = types.InlineKeyboardMarkup()
        btn_end = types.InlineKeyboardButton('–ó–∞–≤—Ä–µ—à–∏—Ç—å', callback_data='end')
        for i in range(len(shopping_list)):
            btn = types.InlineKeyboardButton(str(shopping_list[i]),
                                             callback_data='delete_items_' + str(shopping_list[i]))
            markup_delete.add(btn)
        markup_delete.add(btn_end)

        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç, –Ω–∞–∂–º–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É. –î–∞–ª–µ–µ –Ω–∞–∂–º–∏ –Ω–∞ '
                                          '–∫–Ω–æ–ø–∫—É "–ó–∞–≤—Ä–µ—à–∏—Ç—å"',
                         reply_markup=markup_delete)

    elif message.text == '–ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        btn2 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         '–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —É—Å–ª—É–≥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –ø–æ–¥ —Ç–≤–æ–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)', reply_markup=markup)


def create_list(message):
    if message.text != '–ì–æ—Ç–æ–≤–æ':
        # bot.set_message_reaction(message.chat.id, message.message_id, [types.ReactionTypeEmoji("üëç")])

        shopping_list.append(str(message.text))
        next_do = bot.send_message(message.chat.id, '–î–æ–±–∞–≤–ª–µ–Ω–æ‚úÖ')
        bot.register_next_step_handler(next_do, create_list)

    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        btn2 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id,
                         '–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —É—Å–ª—É–≥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –ø–æ–¥ —Ç–≤–æ–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)', reply_markup=markup)


@bot.callback_query_handler(func=lambda callback: True)
def callback_delete(callback):
    if callback.data.startswith('delete_items_'):

        shopping_list.remove(callback.data.translate(str.maketrans('', '', 'delete_items_')))

        ydal = '–£–¥–∞–ª–µ–Ω–æ: ' + str(callback.data.translate(str.maketrans('', '', 'delete_items_')))

        # bot.delete_message(callback.message.chat.id, callback.message.message_id)

        markup_delete = types.InlineKeyboardMarkup()
        btn_end = types.InlineKeyboardButton('–•–≤–∞—Ç–∏—Ç', callback_data='end')
        for i in range(len(shopping_list)):
            btn = types.InlineKeyboardButton(str(shopping_list[i]),
                                             callback_data='delete_items_' + str(shopping_list[i]))
            markup_delete.add(btn)
        markup_delete.add(btn_end)
        bot.edit_message_reply_markup(callback.message.chat.id, callback.message.id, reply_markup=markup_delete)

        bot.send_message(callback.message.chat.id, str(ydal))

    if callback.data == 'end':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        btn2 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫')
        markup.add(btn1, btn2)
        bot.send_message(callback.message.chat.id,
                         '–í—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —É—Å–ª—É–≥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –ø–æ–¥ —Ç–≤–æ–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)', reply_markup=markup)


if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            time.sleep(3)
            print(e)
